{"version":3,"sources":["img/Lannister_symbol.png","img/Greyjoy_symbol.png","img/Baratheon_symbol.png","img/Martel_symbol.png","img/Stark_symbol.png","img/Tyrell_symbol.png","img/crow.png","Components/Hero.js","Components/Heroes.js","Components/Area.js","Components/Areas.js","Components/Castle.js","Components/Castles.js","Components/Captive.js","Components/Captives.js","Store/actions.js","Components/Information.js","Components/Squad.js","Components/Army.js","Components/Shop.js","Components/Warfare.js","Components/Redemptions.js","Components/Battle.js","Components/Politics.js","Components/History.js","Components/Header.js","reportWebVitals.js","Store/reducers.js","index.js"],"names":["divStyle","width","border","borderRadius","Hero","props","style","this","array","map","elem","name","forceAttack","forceDefend","skillCastle","skillWar","pet","reserve","React","Component","Heroes","state","data","fetch","house","then","res","json","response","setState","prevProps","onClick","e","setName","to","path","render","Area","houseOwner","countPeasants","Areas","Castle","country","forceDefense","uniqueCondition","Castles","Captive","hero","Captives","changeHouse","newHouse","type","ACTION_CHANGE_HOUSE","payload","changeMessage","newMessage","ACTION_CHANGE_MESSAGE","changeHistory","newHistory","ACTION_HISTORY","changeReserves","newData","ACTION_CHANGE_RESERVES","changeFreeCountry","ACTION_CHANGE_FREECOUNTRY","changeEnemyCountry","ACTION_CHANGE_ENEMY_COUNTRY","changeGold","newGold","ACTION_CHANGE_GOLD","changeArmyData","ACTION_CHANGE_DATA_ARMY","changeCaptiveData","ACTION_CHANGE_CAPTIVE_DATA","Information","display","marginRight","connect","message","dispatch","bindActionCreators","Squad","id","forcePerSoldier","numberSoldiers","force","Army","squadId","general","squadList","el","chooseSquad","Shop","armyId","types","number","nameCountry","handleOnSubmit","bind","handleChangeNumber","handleChangeArmyId","handleChangeType","setArmyDefault","setTypeDefault","handleChangeNameCountry","handleChangeName","handleOnSubmitCreating","event","target","value","parameters","method","headers","body","JSON","stringify","nameHouse","ok","Error","catch","error","preventDefault","countGold","typeName","onSubmit","onChange","disabled","selected","armyData","costs","forcePerPerson","placeholder","className","reserves","freeCountry","gold","Warfare","console","log","setArmyId","Redemptions","captive","changeCaptive","captiveData","index","Battle","changeCountry","changeArmyId","document","getElementById","innerHTML","countryName","houseName","army","result","enemyCountries","Politics","component","History","histories","summary","styleDIV","justifyContent","styleImg","position","bottom","right","styleSpeech","Header","choseHouse","src","lannister","alt","height","greyjoy","baratheon","martel","stark","tyrell","p","crow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6adfd6a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Lannister_symbol.b49a67c8.png\";","export default __webpack_public_path__ + \"static/media/Greyjoy_symbol.e4756c0f.png\";","export default __webpack_public_path__ + \"static/media/Baratheon_symbol.4405490a.png\";","export default __webpack_public_path__ + \"static/media/Martel_symbol.839c5439.png\";","export default __webpack_public_path__ + \"static/media/Stark_symbol.1ef6bb07.png\";","export default __webpack_public_path__ + \"static/media/Tyrell_symbol.bd22e9e8.png\";","export default __webpack_public_path__ + \"static/media/crow.dddb52c4.png\";","import React from \"react\";\r\n\r\nconst divStyle = {\r\n    width: '300px',\r\n    border: '2px solid #000',\r\n    borderRadius: '10px'\r\n};\r\n\r\nclass Hero extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div style={divStyle}>\r\n                {this.props.array.map((elem) => {\r\n                    if (elem.name === this.props.name)\r\n                        return (\r\n                            <div>\r\n                                <p>Имя персонажа - {elem.name}</p>\r\n                                <p>Сила в атаке - {elem.forceAttack}</p>\r\n                                <p>Сила в защите - {elem.forceDefend}</p>\r\n                                <p>Умение кастеляна - {elem.skillCastle}</p>\r\n                                <p>Боевое умение - {elem.skillWar}</p>\r\n                                <p>Питомец - {elem.pet === null ? 'Нет' : elem.pet.name}</p>\r\n                                <p>Резервист - {elem.reserve == true ? 'Да' : 'Нет'}</p>\r\n                            </div>);\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Hero;","import React from \"react\";\r\nimport {Switch, Route, Link, BrowserRouter} from \"react-router-dom\";\r\nimport Hero from \"./Hero\";\r\n\r\nclass Heroes extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [],\r\n            name : \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8080/heroes?house=\" + this.props.house)\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                this.setState({data : response})\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.house !== this.props.house){\r\n            fetch(\"http://localhost:8080/heroes?house=\" + this.props.house)\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.setState({data : response})\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    setName(name){\r\n        this.setState({\r\n            name : name\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <BrowserRouter>\r\n                    {this.state.data.map(elem => (\r\n                        <p><Link onClick={(e) => (this.setName(elem.name))} to='/hero'>{elem.name}</Link></p>\r\n                    ))}\r\n                    <Switch>\r\n                        <Route path='/hero' render={(props) => <Hero array={this.state.data} name={this.state.name} /> }/>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Heroes;","import React from 'react';\r\n\r\nconst divStyle = {\r\n    width: '300px',\r\n    border: '2px solid #000',\r\n    borderRadius: '10px'\r\n};\r\n\r\nclass Area extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div style={divStyle}>\r\n                {this.props.array.map((elem) => {\r\n                    if (elem.name === this.props.name)\r\n                        return (\r\n                            <div>\r\n                                <p>Название - {elem.name}</p>\r\n                                <p>Владелец территории - {elem.houseOwner.name}</p>\r\n                                <p>Количество крестьян - {elem.countPeasants}</p>\r\n                            </div>);\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Area;","import React from \"react\";\nimport {BrowserRouter, Link, Route, Switch} from \"react-router-dom\";\nimport Area from \"./Area\";\n\nclass Areas extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data : [],\n            name : \"\"\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:8080/countries?house=\" + this.props.house)\n            .then(res => res.json())\n            .then(response => {\n                this.setState({data : response})\n            });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.house !== this.props.house){\n            fetch(\"http://localhost:8080/countries?house=\" + this.props.house)\n                .then(res => res.json())\n                .then(response => {\n                    this.setState({data : response})\n                });\n        }\n    }\n\n\n    setName(name){\n        this.setState({\n            name : name\n        });\n    }\n\n\n\n\n\n\n    render() {\n        return(\n            <div>\n                <BrowserRouter>\n                    {this.state.data.map(elem => (\n                        <p><Link onClick={(e) => (this.setName(elem.name))} to='/country'>{elem.name}</Link></p>\n                    ))}\n                    <Switch>\n                        <Route path='/country' render={(props) =>  <Area array={this.state.data} name={this.state.name}/>}/>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\n\n\nexport default Areas;","import React from 'react';\r\n\r\nconst divStyle = {\r\n    width: '300px',\r\n    border: '2px solid #000',\r\n    borderRadius: '10px'\r\n};\r\n\r\nclass Castle extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div style={divStyle}>\r\n                {this.props.array.map((elem) => {\r\n                    if (elem.name === this.props.name)\r\n                        return (\r\n                            <div>\r\n                                <p>Название - {elem.name}</p>\r\n                                <p>Месторасположение - {elem.country.name}</p>\r\n                                <p>Уровень обороны - {elem.forceDefense}</p>\r\n                                <p>Особенность - {elem.uniqueCondition}</p>\r\n                            </div>);\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Castle;","import React from 'react';\r\nimport {BrowserRouter, Link, Route, Switch} from \"react-router-dom\";\r\nimport Castle from \"./Castle\";\r\n\r\nclass Castles extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [],\r\n            name : \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8080/castles?house=\" + this.props.house)\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                this.setState({data : response})\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.house !== this.props.house){\r\n            fetch(\"http://localhost:8080/castles?house=\" + this.props.house)\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.setState({data : response})\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    setName(name){\r\n        this.setState({\r\n            name : name\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <BrowserRouter>\r\n                    {this.state.data.map(elem => (\r\n                        <p><Link onClick={(e) => (this.setName(elem.name))} to='/castle'>{elem.name}</Link></p>\r\n                    ))}\r\n                    <Switch>\r\n                        <Route path='/castle' render={(props) => <Castle array={this.state.data} name={this.state.name} /> }/>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Castles;","import React from 'react';\r\n\r\nconst divStyle = {\r\n    width: '300px',\r\n    border: '2px solid #000',\r\n    borderRadius: '10px'\r\n};\r\n\r\nclass Captive extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div style={divStyle}>\r\n                {this.props.array.map((elem) => {\r\n                    if (elem.hero.name === this.props.name)\r\n                        return (\r\n                            <div>\r\n                                <p>Имя - {elem.hero.name}</p>\r\n                                <p>Родной Дом - {elem.hero.house.name}</p>\r\n                            </div>);\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Captive;","import  React from \"react\";\r\nimport {BrowserRouter, Link, Route, Switch} from \"react-router-dom\";\r\nimport Captive from \"./Captive\";\r\n\r\n\r\nclass Captives extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [],\r\n            name : \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8080/captives?house=\" + this.props.house)\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                this.setState({data : response})\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.house !== this.props.house){\r\n            fetch(\"http://localhost:8080/captives?house=\" + this.props.house)\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.setState({data : response})\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    setName(name){\r\n        this.setState({\r\n            name : name\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <BrowserRouter>\r\n                    {this.state.data.map(elem => (\r\n                        <p><Link onClick={(e) => (this.setName(elem.hero.name))} to='/captive'>{elem.hero.name}</Link></p>\r\n                    ))}\r\n                    <Switch>\r\n                        <Route path='/captive' render={(props) => <Captive array={this.state.data} name={this.state.name} /> }/>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Captives;","import {\r\n    ACTION_CHANGE_CAPTIVE_DATA,\r\n    ACTION_CHANGE_DATA_ARMY, ACTION_CHANGE_ENEMY_COUNTRY, ACTION_CHANGE_FREECOUNTRY,\r\n    ACTION_CHANGE_GOLD,\r\n    ACTION_CHANGE_HOUSE, ACTION_CHANGE_MESSAGE, ACTION_CHANGE_RESERVES, ACTION_HISTORY\r\n} from '../Components/Header';\r\nexport const changeHouse = (newHouse) => {\r\n    return {\r\n        type: ACTION_CHANGE_HOUSE,\r\n        payload: newHouse\r\n    };\r\n}\r\n\r\nexport const changeMessage = (newMessage) => {\r\n    return {\r\n      type : ACTION_CHANGE_MESSAGE,\r\n      payload : newMessage\r\n    };\r\n}\r\n\r\nexport const changeHistory = (newHistory) => {\r\n    return {\r\n        type : ACTION_HISTORY,\r\n        payload: newHistory\r\n    };\r\n}\r\n\r\nexport const changeReserves = (newData) => {\r\n    return {\r\n        type : ACTION_CHANGE_RESERVES,\r\n        payload : newData\r\n    };\r\n}\r\n\r\nexport const changeFreeCountry = (newData) => {\r\n    return {\r\n        type : ACTION_CHANGE_FREECOUNTRY,\r\n        payload : newData\r\n    };\r\n}\r\n\r\nexport const changeEnemyCountry = (newData) => {\r\n    return {\r\n        type : ACTION_CHANGE_ENEMY_COUNTRY,\r\n        payload: newData\r\n    }\r\n}\r\n\r\nexport const changeGold = (newGold) => {\r\n    return {\r\n        type: ACTION_CHANGE_GOLD,\r\n        payload: newGold\r\n    };\r\n}\r\n\r\nexport const changeArmyData = (newData) => {\r\n    return {\r\n        type: ACTION_CHANGE_DATA_ARMY,\r\n        payload: newData\r\n    }\r\n}\r\n\r\nexport const changeCaptiveData = (newData) => {\r\n    return {\r\n        type: ACTION_CHANGE_CAPTIVE_DATA,\r\n        payload: newData\r\n    }\r\n}","import React from 'react';\r\nimport {BrowserRouter, Link, Route, Switch} from \"react-router-dom\";\r\nimport Heroes from \"./Heroes\";\r\nimport Areas from \"./Areas\";\r\nimport Castles from \"./Castles\";\r\nimport Captives from \"./Captives\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeGold, changeHouse, changeMessage} from \"../Store/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        message : state.message\r\n    };\r\n};\r\n\r\nconst putActionToProps = (dispatch) => {\r\n    return {\r\n        changeMessage : bindActionCreators(changeMessage, dispatch)\r\n    };\r\n}\r\n\r\n\r\n\r\nclass Information extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            house : props.house\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.changeMessage(\"Нет сообщений\")\r\n        this.setState({\r\n            house : this.props.house\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.house !== this.props.house){\r\n            this.setState({\r\n                house : this.props.house\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <BrowserRouter>\r\n                    <div>\r\n                        <p style={{display : \"inline-block\", marginRight : \"10px\"}}>\r\n                            <Link to='/heroes'>Посмотреть лидеров Дома</Link>\r\n                        </p>\r\n                        <p style={{display : \"inline-block\", marginRight : \"10px\"}}>\r\n                            <Link to='/areas'>Посмотреть владения Дома</Link>\r\n                        </p>\r\n                        <p style={{display : \"inline-block\", marginRight : \"10px\"}}>\r\n                            <Link to='/castles'>Посмотреть замки Дома</Link>\r\n                        </p>\r\n                        <p style={{display : \"inline-block\", marginRight : \"10px\"}}>\r\n                            <Link to='/captives'>Посмотреть заложников</Link>\r\n                        </p>\r\n\r\n                    </div>\r\n                    <Switch>\r\n                        <Route  path='/heroes' render={(props) => (<Heroes house={this.state.house}/>)}/>\r\n                        <Route path='/areas' render={(props) => (<Areas house={this.state.house}/>)}/>\r\n                        <Route path='/castles' render={(props) => (<Castles house={this.state.house}/>)}></Route>\r\n                        <Route path='/captives' render={(props) => (<Captives house={this.state.house}/>)}></Route>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(putStateToProps, putActionToProps)(Information);","import React from 'react';\r\n\r\nconst divStyle = {\r\n    width: '300px',\r\n};\r\n\r\n\r\nclass Squad extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div style={divStyle}>\r\n                {this.props.array.map((elem) => {\r\n                    if (elem.id === this.props.id)\r\n                        return (\r\n                            <div>\r\n                                <p>Родной Дом - {elem.house.name}</p>\r\n                                <p>Тип - {elem.type}</p>\r\n                                <p>Сила солдата - {elem.forcePerSoldier}</p>\r\n                                <p>Численность - {elem.numberSoldiers}</p>\r\n                                <p>Сила - {elem.force}</p>\r\n                            </div>);\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Squad;","import React from 'react';\r\nimport {BrowserRouter, Route, Switch, Link} from \"react-router-dom\";\r\nimport Squad from \"./Squad\";\r\n\r\nconst divStyle = {\r\n    width: '300px',\r\n    border: '2px solid #000',\r\n    borderRadius: '10px'\r\n};\r\nclass Army extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squadId : \"\"\r\n        }\r\n    }\r\n\r\n    chooseSquad(id){\r\n        this.setState({\r\n            squadId : id\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div style={divStyle}>\r\n                {this.props.array.map((elem) => {\r\n                    if (elem.id === this.props.id)\r\n                        return (\r\n                            <div>\r\n                                <p>Генерал - {elem.general.name}</p>\r\n                                <p>Занимаемая территория - {elem.country.name}</p>\r\n                                <p>Сила - {elem.force}</p>\r\n                                <BrowserRouter>\r\n                                    {elem.squadList.map((e) => {\r\n                                        return(<p><Link onClick={(el) => this.chooseSquad(e.id)} to='/squad'>{\"Отряд \" + e.id}</Link></p>);\r\n\r\n                                    })}\r\n                                <Switch>\r\n                                    <Route path='/squad' render={(el) => <Squad array={elem.squadList} id={this.state.squadId}/>}/>\r\n                                </Switch>\r\n                                </BrowserRouter>\r\n                            </div>);\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Army;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeArmyData, changeFreeCountry, changeGold, changeMessage, changeReserves} from \"../Store/actions\";\r\nimport \"../index.css\";\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        gold: state.gold,\r\n        house: state.house,\r\n        armyData: state.armyData,\r\n        reserves: state.reserves,\r\n        freeCountry: state.freeCountry\r\n    };\r\n};\r\n\r\nconst putActionToProps = (dispatch) => {\r\n    return {\r\n        changeGold : bindActionCreators(changeGold, dispatch),\r\n        changeArmyData : bindActionCreators(changeArmyData, dispatch),\r\n        changeReserves : bindActionCreators(changeReserves, dispatch),\r\n        changeFreeCountry : bindActionCreators(changeFreeCountry, dispatch),\r\n        changeMessage : bindActionCreators(changeMessage, dispatch)\r\n    };\r\n}\r\n\r\n\r\nclass Shop extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            armyId : \"\",\r\n            types : [],\r\n            type : \"\",\r\n            number : \"\",\r\n            nameCountry : \"\",\r\n            name : \"\"\r\n        }\r\n\r\n        this.handleOnSubmit = this.handleOnSubmit.bind(this);\r\n        this.handleChangeNumber = this.handleChangeNumber.bind(this);\r\n        this.handleChangeArmyId = this.handleChangeArmyId.bind(this);\r\n        this.handleChangeType = this.handleChangeType.bind(this);\r\n        this.setArmyDefault = this.setArmyDefault.bind(this);\r\n        this.setTypeDefault = this.setTypeDefault.bind(this);\r\n        this.handleChangeNameCountry = this.handleChangeNameCountry.bind(this);\r\n        this.handleChangeName = this.handleChangeName.bind(this);\r\n        this.handleOnSubmitCreating = this.handleOnSubmitCreating.bind(this);\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(\"http://localhost:8080/typesquads\")\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                this.setState({\r\n                    types : response,\r\n                })\r\n            });\r\n\r\n        fetch(\"http://localhost:8080/reserve?house=\" + this.props.house)\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                this.props.changeReserves(response);\r\n            });\r\n        fetch(\"http://localhost:8080/freecountry?house=\" + this.props.house)\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                this.props.changeFreeCountry(response);\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.house !== this.props.house){\r\n            fetch(\"http://localhost:8080/reserve?house=\" + this.props.house)\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.props.changeReserves(response)\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    handleChangeArmyId(event) {\r\n        this.setState({\r\n            armyId : event.target.value\r\n        })\r\n    }\r\n\r\n    handleChangeType(event) {\r\n        this.setState({\r\n            type : event.target.value\r\n        })\r\n    }\r\n\r\n    handleChangeNameCountry(event){\r\n        this.setState({\r\n            nameCountry : event.target.value\r\n        })\r\n    }\r\n\r\n    handleChangeName(event){\r\n        this.setState({name : event.target.value})\r\n    }\r\n\r\n    handleChangeNumber(e){\r\n        this.setState({number : e.target.value})\r\n    }\r\n\r\n    handleOnSubmitCreating(e) {\r\n        if (this.state.name !== \"\" && this.state.nameCountry !== \"\"){\r\n            const parameters = {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    name: this.state.name,\r\n                    nameCountry: this.state.nameCountry,\r\n                    nameHouse: this.props.house\r\n                })\r\n            }\r\n            fetch('http://localhost:8080/army', parameters)\r\n                .then(response => {\r\n                    if (response.ok) return response.json();\r\n                    else throw new Error();\r\n                })\r\n                .then(res => {\r\n                    this.props.changeMessage(\"Удалось создать армию\");\r\n                    this.props.changeArmyData(res);\r\n                    fetch(\"http://localhost:8080/reserve?house=\" + this.props.house)\r\n                        .then(res => res.json())\r\n                        .then(response => {\r\n                            this.props.changeReserves(response)\r\n                        });\r\n                    fetch(\"http://localhost:8080/freecountry?house=\" + this.props.house)\r\n                        .then(res => res.json())\r\n                        .then(response => {\r\n                            this.props.changeFreeCountry(response);\r\n                        })\r\n                })\r\n                .catch((error) => this.props.changeMessage(\"Создать армию не удалось\"))\r\n\r\n        }else this.props.changeMessage(\"Не удалось отправить ворона\");\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    handleOnSubmit(e){\r\n        if (this.state.number !== \"\" && this.state.armyId !== \"\" && this.state.type !== \"\") {\r\n            const parameters = {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    number: this.state.number,\r\n                    armyId: this.state.armyId,\r\n                    type: this.state.type,\r\n                    house: this.props.house\r\n                })\r\n            }\r\n            fetch('http://localhost:8080/squad', parameters)\r\n                .then(response => {\r\n                    if (response.ok) return response.json();\r\n                    else throw new Error();\r\n                } )\r\n                .then(res => {\r\n                    this.props.changeMessage(\"Отряд добавлен в армию\");\r\n                    this.props.changeArmyData(res);\r\n                    fetch('http://localhost:8080/house?house=' + this.props.house)\r\n                        .then(response => response.json())\r\n                        .then(res => {\r\n                            this.props.changeGold(res.countGold);\r\n                        })\r\n                })\r\n                .catch((error) => this.props.changeMessage(\"Не удалось собрать отряд\"))\r\n\r\n        }else this.props.changeMessage(\"Не удалось отправить ворона\");\r\n\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    setArmyDefault(id){\r\n        this.setState({\r\n            armyId : id\r\n        })\r\n    }\r\n\r\n    setTypeDefault(typeName){\r\n        this.setState({\r\n            type : typeName\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <p>Покупка отряда</p>\r\n                <form onSubmit={this.handleOnSubmit}>\r\n                    <select  onClick={this.handleChangeArmyId} onChange={this.handleChangeArmyId}>\r\n                        <option value=\"\" disabled selected>Выберите армию</option>\r\n                        {this.props.armyData.map((elem) => {\r\n                            return(<option value={elem.id}>{\"Армия \" + elem.id}</option>);\r\n                        })}\r\n                    </select>\r\n                    <select onClick={this.handleChangeType} onChange={this.handleChangeType}>\r\n                        <option value=\"\" disabled selected>Выберите тип отряда</option>\r\n                        {this.state.types.map((elem) => {\r\n                            return (<option value={elem.typeName}>{elem.typeName + \" Стоимость \" + elem.costs + \" Боевая мощь единицы \" + elem.forcePerPerson}</option>);\r\n                        })}\r\n                    </select>\r\n                    <input placeholder=\"Введите число солдат\" type=\"number\" onChange={this.handleChangeNumber}/>\r\n                    <input className=\"button\" type=\"submit\" value=\"Купить\"/>\r\n                </form>\r\n                    <p>Создание армии</p>\r\n                    <form onSubmit={this.handleOnSubmitCreating}>\r\n                        <select onClick={this.handleChangeName} onChange={this.handleChangeName}>\r\n                            <option value=\"\" disabled selected>Выберите армию</option>\r\n                            {this.props.reserves.map((elem) => {\r\n                                return (<option value={elem.name}>{elem.name}</option>);\r\n                            })}\r\n                        </select>\r\n                        <select onClick={this.handleChangeNameCountry} onChange={this.handleChangeNameCountry}>\r\n                            <option value=\"\" disabled selected>Выберите территорию</option>\r\n                            {this.props.freeCountry.map((elem) => {\r\n                                return (<option value={elem.name}>{elem.name}</option> );\r\n                            })}\r\n                        </select>\r\n                        <input className=\"button\" type=\"submit\" value=\"Создать\"/>\r\n                    </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(putStateToProps, putActionToProps) (Shop);","import React from 'react';\r\nimport {BrowserRouter, Route, Switch, Link} from \"react-router-dom\";\r\nimport Army from \"./Army\";\r\nimport Shop from \"./Shop\";\r\n\r\nimport {connect} from 'react-redux';\r\nimport {changeArmyData, changeMessage} from \"../Store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        house: state.house,\r\n        armyData: state.armyData,\r\n        message : state.message\r\n    };\r\n};\r\n\r\nconst putActionToProps = (dispatch) => {\r\n    return {\r\n        changeArmyData : bindActionCreators(changeArmyData, dispatch),\r\n        changeMessage : bindActionCreators(changeMessage, dispatch)\r\n    };\r\n}\r\n\r\nclass Warfare extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            armyId : null,\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.changeMessage(\"Нет сообщений\");\r\n        fetch(\"http://localhost:8080/armies?house=\" + this.props.house)\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                    this.props.changeArmyData(response)\r\n                }\r\n            );\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.house !== this.props.house){\r\n            fetch(\"http://localhost:8080/armies?house=\" + this.props.house)\r\n                .then(res => res.json())\r\n                .then(response => {\r\n                    this.props.changeArmyData(response)\r\n                });\r\n        }\r\n    }\r\n\r\n    setArmyId(id){\r\n        this.setState({\r\n            armyId : id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return(\r\n            <div>\r\n                <BrowserRouter>\r\n                    {this.props.armyData.map(elem =>(\r\n                        <p><Link onClick={(e) => (this.setArmyId(elem.id))} to='/army'>{\"Армия \" + elem.id}</Link> </p>\r\n                    ))}\r\n                    <p><Link to='/shop'>Покупка армии</Link></p>\r\n                    <Switch>\r\n                        <Route path='/army' render={(e) => <Army array={this.props.armyData} id={this.state.armyId}/>}/>\r\n                        <Route path='/shop' render={(e) => <Shop/>}/>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionToProps)(Warfare);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeCaptiveData, changeGold, changeHouse, changeMessage} from \"../Store/actions\";\r\nimport {styleSelect} from \"./Header\";\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        house: state.house,\r\n        gold: state.gold,\r\n        captiveData : state.captiveData\r\n    };\r\n};\r\n\r\nconst putActionToProps = (dispatch) => {\r\n    return {\r\n        changeGold : bindActionCreators(changeGold, dispatch),\r\n        changeCaptiveData: bindActionCreators(changeCaptiveData, dispatch),\r\n        changeMessage : bindActionCreators(changeMessage, dispatch)\r\n    };\r\n}\r\n\r\nclass Redemptions extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            captive : \"\"\r\n        }\r\n\r\n        this.changeCaptive = this.changeCaptive.bind(this);\r\n        this.handleOnSubmit = this.handleOnSubmit.bind(this);\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        this.props.changeMessage(\"Нет сообщений\");\r\n        fetch(\"http://localhost:8080/othercaptives?house=\" + this.props.house)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                this.props.changeCaptiveData(res);\r\n\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.house != this.props.house) {\r\n            fetch(\"http://localhost:8080/othercaptives?house=\" + this.props.house)\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    this.props.changeCaptiveData(res);\r\n\r\n                })\r\n        }\r\n    }\r\n\r\n    changeCaptive(event) {\r\n        this.setState({\r\n            captive : event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    handleOnSubmit(e){\r\n        if (this.state.captive !== \"\"){\r\n            const parameters = {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    name : this.state.captive\r\n                })\r\n            }\r\n            fetch('http://localhost:8080/captive', parameters)\r\n                .then(response => {\r\n                    if (!response.ok) throw new Error();\r\n                    else return response.json();\r\n                })\r\n                .then(res => {\r\n                        this.props.changeMessage(\"Выкуп прошёл успешно\");\r\n                        this.props.changeGold(res);\r\n                        fetch(\"http://localhost:8080/othercaptives?house=\" + this.props.house)\r\n                            .then(response => response.json())\r\n                            .then(res => {\r\n                                this.props.changeCaptiveData(res);\r\n\r\n                            })\r\n\r\n                })\r\n                .catch((error) =>{\r\n                    this.props.changeMessage(\"Сделка сорвалась!\");\r\n                })\r\n\r\n        }else this.props.changeMessage(\"Не удалось отправить ворона\");\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <p>Цена любого заложника 30 000 у. е.</p>\r\n                <form onSubmit={this.handleOnSubmit}>\r\n\r\n                    <select onClick={this.changeCaptive} onChange={this.changeCaptive}>\r\n                        <option value=\"\" disabled selected>Выберите героя</option>\r\n                        {this.props.captiveData.map((elem, index) => {\r\n                            return(<option value={elem.hero.name}>{elem.hero.name}</option> );\r\n                        })}\r\n                    </select>\r\n                    <input className=\"button\" type=\"submit\" value=\"Совершить сделку\"/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default connect(putStateToProps, putActionToProps)(Redemptions);\r\n","import React from 'react';\nimport {bindActionCreators} from \"redux\";\nimport {connect} from 'react-redux';\nimport {changeArmyData, changeEnemyCountry, changeMessage} from \"../Store/actions\";\n\nconst putStateToProps = (state) => {\n    return {\n        house: state.house,\n        armyData: state.armyData,\n        enemyCountries: state.enemyCountries,\n        message: state.message\n    };\n};\n\nconst putActionToProps = (dispatch) => {\n    return {\n        changeArmyData : bindActionCreators(changeArmyData, dispatch),\n        changeEnemyCountry : bindActionCreators(changeEnemyCountry, dispatch),\n        changeMessage : bindActionCreators(changeMessage, dispatch)\n    };\n}\n\nclass Battle extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            armyId : \"\",\n            country : \"\",\n        }\n\n        this.changeCountry = this.changeCountry.bind(this);\n        this.changeArmyId = this.changeArmyId.bind(this);\n        this.handleOnSubmit = this.handleOnSubmit.bind(this);\n    }\n\n    componentWillMount() {\n        fetch(\"http://localhost:8080/armies?house=\" + this.props.house)\n            .then(res => res.json())\n            .then(response => {\n                    this.props.changeArmyData(response)\n                }\n            );\n        fetch(\"http://localhost:8080/enemycountry?house=\" + this.props.house)\n            .then(res => res.json())\n            .then(response => {\n                this.props.changeEnemyCountry(response)\n            })\n    }\n\n    componentDidMount() {\n        document.getElementById(\"message\").innerHTML = \"\";\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.house !== this.props.house){\n            fetch(\"http://localhost:8080/armies?house=\" + this.props.house)\n                .then(res => res.json())\n                .then(response => {\n                    this.props.changeArmyData(response)\n                });\n            fetch(\"http://localhost:8080/enemycountry?house=\" + this.props.house)\n                .then(res => res.json())\n                .then(response => {\n                    this.props.changeEnemyCountry(response);\n                })\n        }\n    }\n\n    changeCountry(event){\n        this.setState({\n            country : event.target.value\n        })\n    }\n\n    changeArmyId(event){\n        this.setState({\n            armyId : event.target.value\n        })\n    }\n\n    handleOnSubmit(event) {\n\n        if (this.state.country !== \"\" && this.state.armyId !== \"\") {\n            const parameters = {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    countryName: this.state.country,\n                    armyId: this.state.armyId,\n                    houseName: this.props.house\n                })\n            }\n            fetch('http://localhost:8080/battle', parameters)\n                .then(response => {\n                    if (response.ok) return response.json();\n                    else throw new Error()\n                })\n                .then(res => {\n                    this.props.changeArmyData(res.army)\n                    this.props.changeMessage(res.result)\n                    fetch(\"http://localhost:8080/enemycountry?house=\" + this.props.house)\n                        .then(res => res.json())\n                        .then(response => {\n                            this.props.changeEnemyCountry(response);\n                        })\n                })\n                .catch((error) => this.props.changeMessage(\"Нападение не удалось\"))\n\n        }else this.props.changeMessage(\"Не удалось отправить ворона\");\n        event.preventDefault();\n\n    }\n\n    render() {\n        return(\n            <div>\n                <form onSubmit={this.handleOnSubmit}>\n                    <p>Выберите армию, которая отправится в нападение</p>\n                    {this.props.armyData.map((elem) => {\n                        return(\n                            <div>\n                                <label>{\"Армия \" + elem.id}</label>\n                                <input onClick={this.changeArmyId} type=\"radio\" value={elem.id} name=\"id\"/>\n                            </div>\n                            );\n                    })}\n                    <p>Выберите территорию, которую будете атаковать</p>\n                    {this.props.enemyCountries.map((elem) => {\n                        return(\n                            <div>\n                                <label>{elem.name}</label>\n                                <input onClick={this.changeCountry} type=\"radio\" value={elem.name} name=\"country\"/>\n                            </div>\n                        );\n                    })}\n                    <input className=\"button\" type=\"submit\" value=\"Напасть\"/>\n                </form>\n                <p id=\"message\"/>\n            </div>\n        );\n    }\n}\n\nexport default connect (putStateToProps, putActionToProps)(Battle);","import React from 'react';\r\n\r\nimport {Link, BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport Redemptions from \"./Redemptions\";\r\nimport Battle from \"./Battle\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeGold, changeHouse, changeMessage} from \"../Store/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        message : state.message\r\n    };\r\n};\r\n\r\nconst putActionToProps = (dispatch) => {\r\n    return {\r\n        changeMessage : bindActionCreators(changeMessage, dispatch)\r\n    };\r\n}\r\n\r\n\r\nclass Politics extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <BrowserRouter>\r\n                    <p style={{display : \"inline-block\", marginRight : \"10px\"}}>\r\n                        <Link to='/redemption'>Выкуп Лидера</Link>\r\n                    </p>\r\n                    <p style={{display : \"inline-block\", marginRight : \"10px\"}}>\r\n                        <Link to='/battle'>Сражение</Link>\r\n                    </p>\r\n                    <Switch>\r\n                        <Route path='/redemption' component={Redemptions}/>\r\n                        <Route path='/battle' component={Battle}/>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionToProps)(Politics);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {changeHistory, changeMessage} from \"../Store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        histories : state.histories,\r\n        message : state.message\r\n    };\r\n}\r\n\r\nconst putActionToProps = (dispatch) => {\r\n    return {\r\n        changeHistory : bindActionCreators(changeHistory, dispatch),\r\n        changeMessage : bindActionCreators(changeMessage, dispatch)\r\n    };\r\n}\r\n\r\n\r\nclass History extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.changeMessage(\"Нет сообщений\");\r\n        fetch('http://localhost:8080/history')\r\n            .then(response => response.json())\r\n            .then(res =>{\r\n                this.props.changeHistory(res)\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <table>\r\n                    <tr>\r\n                        <td>Название сражения</td>\r\n                        <td>Место</td>\r\n                        <td>Результат</td>\r\n                    </tr>\r\n                    {this.props.histories.map((elem) => {\r\n                        return <tr>\r\n                            <td>{elem.name}</td>\r\n                            <td>{elem.country.name}</td>\r\n                            <td>{elem.summary}</td>\r\n                        </tr>\r\n                    })}\r\n                </table>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(putStateToProps, putActionToProps) (History);","import React from \"react\";\r\n\r\nimport lannister from \"../img/Lannister_symbol.png\";\r\nimport greyjoy from \"../img/Greyjoy_symbol.png\";\r\nimport baratheon from \"../img/Baratheon_symbol.png\";\r\nimport martel from \"../img/Martel_symbol.png\";\r\nimport stark from \"../img/Stark_symbol.png\";\r\nimport tyrell from \"../img/Tyrell_symbol.png\";\r\nimport crow from \"../img/crow.png\";\r\nimport {Switch, Route, Link, BrowserRouter} from \"react-router-dom\";\r\nimport Information from \"./Information\";\r\nimport Warfare from \"./Warfare\";\r\nimport {connect} from 'react-redux';\r\nimport {changeGold, changeHouse, changeMessage} from \"../Store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport Politics from \"./Politics\";\r\nimport History from \"./History\";\r\n\r\n\r\nexport const ACTION_CHANGE_HOUSE = \"ACTION_CHANGE_HOUSE\";\r\nexport const ACTION_CHANGE_GOLD = \"ACTION_CHANGE_GOLD\";\r\nexport const ACTION_CHANGE_DATA_ARMY = \"ACTION_CHANGE_DATA_ARMY\";\r\nexport const ACTION_CHANGE_CAPTIVE_DATA = \"ACTION_CHANGE_CAPTIVE_DATA\";\r\nexport const ACTION_CHANGE_ENEMY_COUNTRY = \"ACTION_CHANGE_ENEMY_COUNTRY\";\r\nexport const ACTION_HISTORY = \"ACTION_HISTORY\";\r\nexport const ACTION_CHANGE_RESERVES = \"ACTION_CHANGE_RESERVES\"\r\nexport const ACTION_CHANGE_FREECOUNTRY = \"ACTION_CHANGE_FREECOUNTRY\";\r\nexport const ACTION_CHANGE_MESSAGE = \"ACTION_CHANGE_MESSAGE\";\r\n\r\n\r\nconst styleDIV = {\r\n    display : \"flex\",\r\n    justifyContent : \"center\",\r\n\r\n}\r\n\r\nconst styleImg = {\r\n    position : \"fixed\",\r\n    bottom : \"0\",\r\n    right : \"0\"\r\n}\r\n\r\nconst styleSpeech = {\r\n    position: \"fixed\",\r\n    bottom: \"100px\",\r\n    right: \"80px\"\r\n}\r\n\r\nclass Header extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.choseHouse = this.choseHouse.bind(this);\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.changeMessage(\"Нет сообщений\");\r\n        fetch(\"http://localhost:8080/house?house=\" + this.props.house)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.props.changeGold(result.countGold)\r\n                });\r\n    }\r\n\r\n\r\n    choseHouse(house){\r\n        this.props.changeHouse(house);\r\n        fetch(\"http://localhost:8080/house?house=\" + house)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.props.changeGold(result.countGold)\r\n                }\r\n            );\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div style={styleDIV}>\r\n                    <p>\r\n                        <img className=\"img\" onClick={(elem) => this.choseHouse(\"Ланнистеры\")} src={lannister} alt=\"Ланнистеры\" width=\"100\" height=\"100\"/>\r\n                    </p>\r\n                    <p>\r\n                        <img className=\"img\" onClick={(elem) => this.choseHouse(\"Грейджои\")}  src={greyjoy} alt=\"Грейджои\" width=\"100\" height=\"100\"/>\r\n                    </p>\r\n                    <p>\r\n                        <img className=\"img\" onClick={(elem) => this.choseHouse(\"Баратеоны\")} src={baratheon} alt=\"Баратеоны\" width=\"100\" height=\"100\"/>\r\n                    </p>\r\n                    <p>\r\n                        <img className=\"img\" onClick={(elem) => this.choseHouse(\"Мартеллы\")} src={martel} alt=\"Мартеллы\" width=\"100\" height=\"100\"/>\r\n                    </p>\r\n                    <p>\r\n                        <img className=\"img\" onClick={(elem) => this.choseHouse(\"Старки\")} src={stark} alt=\"Старки\" width=\"100\" height=\"100\"/>\r\n                    </p>\r\n                    <p>\r\n                        <img className=\"img\" onClick={(elem) => this.choseHouse(\"Тиреллы\")} src={tyrell} alt=\"Тиреллы\" width=\"100\" height=\"100\"/>\r\n                    </p>\r\n\r\n                </div>\r\n                <div>\r\n                    <p>Дом - {this.props.house}</p>\r\n                    <p>Количество золота - {this.props.gold} у. е.</p>\r\n\r\n                </div>\r\n                <div>\r\n                    <BrowserRouter>\r\n                        <div>\r\n                            <p style={{display : \"inline-block\", marginRight : \"10px\"}}>\r\n                                <Link to='/information'>Посмотреть информацию о Доме</Link>\r\n                            </p>\r\n                            <p style={{display : \"inline-block\", marginRight : \"10px\"}}>\r\n                                <Link to='/warfare'>Военное дело Дома</Link>\r\n                            </p>\r\n                            <p style={{display : \"inline-block\", marginRight : \"10px\"}}>\r\n                                <Link to='/politics'>Политика Дома</Link>\r\n                            </p>\r\n                            <p style={{display : \"inline-block\", marginRight : \"10px\"}}>\r\n                                <Link to='/history'>История</Link>\r\n                            </p>\r\n                        </div>\r\n                        <Switch>\r\n                            <Route path='/information' render={(p) => (<Information house={this.props.house}/>)}/>\r\n                            <Route path='/warfare' render={(p) => (<Warfare house={this.props.house}/>)}/>\r\n                            <Route path='/politics' render={(p) => (<Politics house={this.props.house}/>)}/>\r\n                            <Route path='/history' render={(p) => (<History/>)}/>\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                        <div style={styleSpeech}>\r\n                            <p className=\"speech\">{this.props.message}</p>\r\n                        </div>\r\n                        <img style={styleImg} src={crow} alt=\"crow\" width=\"150px\" height=\"150px\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return {\r\n        house: state.house,\r\n        gold: state.gold,\r\n        message : state.message\r\n    };\r\n};\r\n\r\nconst putActionToProps = (dispatch) => {\r\n    return {\r\n        changeGold : bindActionCreators(changeGold, dispatch),\r\n        changeHouse : bindActionCreators(changeHouse, dispatch),\r\n        changeMessage : bindActionCreators(changeMessage, dispatch)\r\n    };\r\n}\r\n\r\nexport default connect(putStateToProps, putActionToProps)(Header);\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    ACTION_CHANGE_CAPTIVE_DATA,\r\n    ACTION_CHANGE_DATA_ARMY, ACTION_CHANGE_ENEMY_COUNTRY, ACTION_CHANGE_FREECOUNTRY,\r\n    ACTION_CHANGE_GOLD,\r\n    ACTION_CHANGE_HOUSE, ACTION_CHANGE_MESSAGE, ACTION_CHANGE_RESERVES, ACTION_HISTORY\r\n} from \"../Components/Header\";\r\n\r\nconst initialState = {\r\n    message: \"Нет сообщений\",\r\n    house: \"Ланнистеры\",\r\n    gold: 0,\r\n    armyData: [],\r\n    captiveData: [],\r\n    enemyCountries: [],\r\n    histories : [],\r\n    reserves : [],\r\n    freeCountry: []\r\n};\r\n\r\nexport const HeaderReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_HOUSE :\r\n            return {...state, house : action.payload};\r\n        case ACTION_CHANGE_GOLD :\r\n            return {...state, gold: action.payload};\r\n        case ACTION_CHANGE_DATA_ARMY :\r\n            return {...state, armyData: action.payload};\r\n        case ACTION_CHANGE_CAPTIVE_DATA :\r\n            return {...state, captiveData: action.payload };\r\n        case ACTION_CHANGE_ENEMY_COUNTRY :\r\n            return {...state, enemyCountries: action.payload}\r\n        case ACTION_HISTORY :\r\n            return {...state, histories: action.payload}\r\n        case ACTION_CHANGE_RESERVES :\r\n            return {...state, reserves: action.payload}\r\n        case ACTION_CHANGE_FREECOUNTRY :\r\n            return {...state, freeCountry: action.payload}\r\n        case ACTION_CHANGE_MESSAGE :\r\n            return {...state, message: action.payload}\r\n    }\r\n    return state;\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from \"./Components/Header\";\nimport \"./index.css\";\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"redux\";\nimport {HeaderReducer} from \"./Store/reducers\";\n\nconst store = createStore(HeaderReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <Header />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}